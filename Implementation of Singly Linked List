#include<stdio.h>
#include<stdlib.h>
struct node
{
	int  data;
	struct node *next;
};



void insert_begin();
void insert_middle();
void insert_end();
void display();
void delete_begin();
void delete_middle();
void delete_end();

int main()
{   int num ;
	struct node *n;
	printf("Enter number of nodes: ");
	scanf("%d",&num);
	if(num<=0)
	{
	  printf("No Nodes Created!!!");
	  return 0;
	}
	struct node *head =(struct node*)malloc(sizeof(struct node));
	printf("\nEnter data: ");
	scanf("%d",&head->data);
	head->next=NULL;
	struct node *tail = head;

	for(int i=1; i<num; i++)
	{
		n=(struct node*)malloc(sizeof(struct node));
		scanf("%d",&n->data);
		n->next=NULL;
		tail->next=n;
		tail=tail->next;

	}

    
    int choice;
    printf("\n1.)Insert at Begin\n2.)Insert at Middle\n3.)Insert at End\n4.)Display\n5.)Delete at Begin\n6.)Delete at Middle\n7.)Delete at End\n");
    while(1)
    {
    printf("\nEnter your choice : ");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1:insert_begin(&head);
        printf("After Insertion:");
        display(head);
        break;
        
        case 2:insert_middle(&head);
        printf("After Insertion:");
        display(head);
        break;
        
        case 3:insert_end(&head);
        printf("After Insertion:");
        display(head);
        break;
        
        case 4:display(head);
        break;
        
        case 5:delete_begin(&head);
        printf("After Deletion:");
        display(head);
        break;
        
        case 6:delete_middle(&head);
        printf("After Deletion:");
        display(head);
        break;
        
        case 7:delete_end(&head);
        printf("After Deletion:");
        display(head);
        break;
        
        default :printf("Program Terminated!!!");
                return 0;
    }
    
}

  return 0;  
}


void insert_begin(struct node **head)
{
    int ele;
    printf("\nEnter the Element to be Inserted : ");
    scanf("%d",&ele);
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=ele;
    newnode->next=*head;
    *head=newnode;
}


void insert_middle(struct node **head)
{
    int ele,pos;
    printf("\nEnter the Element to be Inserted : ");
    scanf("%d",&ele);
    printf("\nEnter the Position to be Inserted : ");
    scanf("%d",&pos);
	struct node *old,*p;
	struct node *newnode=(struct node*)malloc(sizeof(struct node));
	newnode->next=NULL;
	newnode->data=ele;
    
    old=p=*head;
for(int i=1;i<pos;i++)
{
    old=p;
    p=p->next;
}
   old->next=newnode;
   newnode->next=p;
}



void insert_end(struct node **head)
{
    
    int ele;
    printf("\nEnter the Element to be Inserted : ");
    scanf("%d",&ele);
	struct node *temp=*head;
	struct node *newnode=(struct node*)malloc(sizeof(struct node));
	newnode->next=NULL;
	newnode->data=ele;
	while(temp->next!=NULL)
	{
		temp=temp->next;
	}

	temp->next=newnode;
}


void display(struct node *n)
{


	while ( n != NULL)
	{
		printf ("%d ", n->data);
		n = n->next;
	}
	printf ("\n");
}


void delete_begin(struct node **head)
{
    struct node *p;
    p=*head;
    *head=p->next;
    free(p);
}


void delete_middle(struct node **head)
{
	int pos;
	struct node *old,*p,*s;
	printf("Enter the position to be Deleted: ");
	scanf("%d",&pos);
	old=*head;
	p=*head;
	for(int i=1; i<pos; i++)
	{
		old=p;
		p=p->next;
	}
	s=p->next;
	old->next=s;
	free(p);
}


void delete_end(struct node **head)
{
	struct node *old,*p;
	old=*head;
	p=*head;
	while(p->next!=NULL)
	{
	    old=p;
	    p=p->next;
	}
 
	old->next=NULL;
	free(p);
}

OUTPUT:

Enter number of nodes: 5 

Enter data: 1 2 3 4 5

1.)Insert at Begin
2.)Insert at Middle
3.)Insert at End
4.)Display
5.)Delete at Begin
6.)Delete at Middle
7.)Delete at End

Enter your choice : 1 

Enter the Element to be Inserted : 6
After Insertion:6 1 2 3 4 5 

Enter your choice : 2

Enter the Element to be Inserted : 8

Enter the Position to be Inserted : 3
After Insertion:6 1 8 2 3 4 5 

Enter your choice : 4 3

Enter the Element to be Inserted : 9
After Insertion:6 1 8 2 3 4 5 9 

Enter your choice : 4
6 1 8 2 3 4 5 9 

Enter your choice : 5
After Deletion:1 8 2 3 4 5 9 

Enter your choice : 6
Enter the position to be Deleted: 5
After Deletion:1 8 2 3 5 9 

Enter your choice : 7
After Deletion:1 8 2 3 5 

Enter your choice : 8
Program Terminated!!!
